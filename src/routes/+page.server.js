import { getData } from './get-data';

/** @type {import('./$types').PageServerLoad} */
export async function load() {
	let options = { timeZone: 'America/Lima' };

	let now = new Date();
	let limaDateTime = now.toLocaleDateString('en-US', options);

	let [today_month, today_day, today_year] = limaDateTime.split('/');
	today_month = today_month.padStart(2, '0');
	today_day = today_day.padStart(2, '0');

	let day_start = new Date(`${today_year}-${today_month}-${today_day}T14:00:00.000Z`);

	return getData(day_start);
}

export const prerender = false;

import { BYPASS_TOKEN } from '$env/static/private';

export const config = {
	isr: {
		// Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.
		// Setting the value to `false` means it will never expire.
		expiration: 36000,

		// Random token that can be provided in the URL to bypass the cached version of the asset, by requesting the asset
		// with a __prerender_bypass=<token> cookie.
		//
		// Making a `GET` or `HEAD` request with `x-prerender-revalidate: <token>` will force the asset to be re-validated.
		bypassToken: BYPASS_TOKEN
	}
};
