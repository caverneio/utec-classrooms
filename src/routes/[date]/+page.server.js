import { getData } from '../get-data';

/** @type {import('./$types').PageServerLoad} */
export async function load({ params }) {
	let day_start = new Date(`${params.date}T14:00:00.000Z`);

	return getData(day_start);
}

/** @type {import('./$types').EntryGenerator} */
export function entries() {
	let start_date = new Date('2023-10-01');

	let dates = new Array(10).fill(0).map((_, i) => {
		let date = new Date(start_date);
		date.setDate(date.getDate() + i);
		return {
			date: date.toISOString().split('T')[0]
		};
	});

	return dates;
}

export const prerender = 'auto';

import { BYPASS_TOKEN } from '$env/static/private';

export const config = {
	isr: {
		// Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.
		// Setting the value to `false` means it will never expire.
		expiration: 36000,

		// Random token that can be provided in the URL to bypass the cached version of the asset, by requesting the asset
		// with a __prerender_bypass=<token> cookie.
		//
		// Making a `GET` or `HEAD` request with `x-prerender-revalidate: <token>` will force the asset to be re-validated.
		bypassToken: BYPASS_TOKEN
	}
};
